// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package token_metadata

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// DeprecatedSetReservationList is the `DeprecatedSetReservationList` instruction.
type DeprecatedSetReservationList struct {

	// [0] = [WRITE] masterEdition
	// ··········· Master Edition V1 key (pda of ['metadata', program id, mint id, 'edition'])
	//
	// [1] = [WRITE] reservationList
	// ··········· PDA for ReservationList of ['metadata', program id, master edition key, 'reservation', resource-key]
	//
	// [2] = [SIGNER] resource
	// ··········· The resource you tied the reservation list too
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewDeprecatedSetReservationListInstructionBuilder creates a new `DeprecatedSetReservationList` instruction builder.
func NewDeprecatedSetReservationListInstructionBuilder() *DeprecatedSetReservationList {
	nd := &DeprecatedSetReservationList{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 3),
	}
	return nd
}

// SetMasterEditionAccount sets the "masterEdition" account.
// Master Edition V1 key (pda of ['metadata', program id, mint id, 'edition'])
func (inst *DeprecatedSetReservationList) SetMasterEditionAccount(masterEdition ag_solanago.PublicKey) *DeprecatedSetReservationList {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(masterEdition).WRITE()
	return inst
}

// GetMasterEditionAccount gets the "masterEdition" account.
// Master Edition V1 key (pda of ['metadata', program id, mint id, 'edition'])
func (inst *DeprecatedSetReservationList) GetMasterEditionAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetReservationListAccount sets the "reservationList" account.
// PDA for ReservationList of ['metadata', program id, master edition key, 'reservation', resource-key]
func (inst *DeprecatedSetReservationList) SetReservationListAccount(reservationList ag_solanago.PublicKey) *DeprecatedSetReservationList {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(reservationList).WRITE()
	return inst
}

// GetReservationListAccount gets the "reservationList" account.
// PDA for ReservationList of ['metadata', program id, master edition key, 'reservation', resource-key]
func (inst *DeprecatedSetReservationList) GetReservationListAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetResourceAccount sets the "resource" account.
// The resource you tied the reservation list too
func (inst *DeprecatedSetReservationList) SetResourceAccount(resource ag_solanago.PublicKey) *DeprecatedSetReservationList {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(resource).SIGNER()
	return inst
}

// GetResourceAccount gets the "resource" account.
// The resource you tied the reservation list too
func (inst *DeprecatedSetReservationList) GetResourceAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

func (inst DeprecatedSetReservationList) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_DeprecatedSetReservationList,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst DeprecatedSetReservationList) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *DeprecatedSetReservationList) Validate() error {
	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.MasterEdition is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.ReservationList is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.Resource is not set")
		}
	}
	return nil
}

func (inst *DeprecatedSetReservationList) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("DeprecatedSetReservationList")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=0]").ParentFunc(func(paramsBranch ag_treeout.Branches) {})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=3]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("  masterEdition", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("reservationList", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("       resource", inst.AccountMetaSlice.Get(2)))
					})
				})
		})
}

func (obj DeprecatedSetReservationList) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	return nil
}
func (obj *DeprecatedSetReservationList) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	return nil
}

// NewDeprecatedSetReservationListInstruction declares a new DeprecatedSetReservationList instruction with the provided parameters and accounts.
func NewDeprecatedSetReservationListInstruction(
	// Accounts:
	masterEdition ag_solanago.PublicKey,
	reservationList ag_solanago.PublicKey,
	resource ag_solanago.PublicKey) *DeprecatedSetReservationList {
	return NewDeprecatedSetReservationListInstructionBuilder().
		SetMasterEditionAccount(masterEdition).
		SetReservationListAccount(reservationList).
		SetResourceAccount(resource)
}
