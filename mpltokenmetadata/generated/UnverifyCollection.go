// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package token_metadata

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// UnverifyCollection is the `UnverifyCollection` instruction.
type UnverifyCollection struct {

	// [0] = [WRITE] metadata
	// ··········· Metadata account
	//
	// [1] = [WRITE, SIGNER] collectionAuthority
	// ··········· Collection Authority
	//
	// [2] = [] collectionMint
	// ··········· Mint of the Collection
	//
	// [3] = [] collection
	// ··········· Metadata Account of the Collection
	//
	// [4] = [] collectionMasterEditionAccount
	// ··········· MasterEdition2 Account of the Collection Token
	//
	// [5] = [] collectionAuthorityRecord
	// ··········· Collection Authority Record PDA
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewUnverifyCollectionInstructionBuilder creates a new `UnverifyCollection` instruction builder.
func NewUnverifyCollectionInstructionBuilder() *UnverifyCollection {
	nd := &UnverifyCollection{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 6),
	}
	return nd
}

// SetMetadataAccount sets the "metadata" account.
// Metadata account
func (inst *UnverifyCollection) SetMetadataAccount(metadata ag_solanago.PublicKey) *UnverifyCollection {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(metadata).WRITE()
	return inst
}

// GetMetadataAccount gets the "metadata" account.
// Metadata account
func (inst *UnverifyCollection) GetMetadataAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetCollectionAuthorityAccount sets the "collectionAuthority" account.
// Collection Authority
func (inst *UnverifyCollection) SetCollectionAuthorityAccount(collectionAuthority ag_solanago.PublicKey) *UnverifyCollection {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(collectionAuthority).WRITE().SIGNER()
	return inst
}

// GetCollectionAuthorityAccount gets the "collectionAuthority" account.
// Collection Authority
func (inst *UnverifyCollection) GetCollectionAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetCollectionMintAccount sets the "collectionMint" account.
// Mint of the Collection
func (inst *UnverifyCollection) SetCollectionMintAccount(collectionMint ag_solanago.PublicKey) *UnverifyCollection {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(collectionMint)
	return inst
}

// GetCollectionMintAccount gets the "collectionMint" account.
// Mint of the Collection
func (inst *UnverifyCollection) GetCollectionMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetCollectionAccount sets the "collection" account.
// Metadata Account of the Collection
func (inst *UnverifyCollection) SetCollectionAccount(collection ag_solanago.PublicKey) *UnverifyCollection {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(collection)
	return inst
}

// GetCollectionAccount gets the "collection" account.
// Metadata Account of the Collection
func (inst *UnverifyCollection) GetCollectionAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetCollectionMasterEditionAccountAccount sets the "collectionMasterEditionAccount" account.
// MasterEdition2 Account of the Collection Token
func (inst *UnverifyCollection) SetCollectionMasterEditionAccountAccount(collectionMasterEditionAccount ag_solanago.PublicKey) *UnverifyCollection {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(collectionMasterEditionAccount)
	return inst
}

// GetCollectionMasterEditionAccountAccount gets the "collectionMasterEditionAccount" account.
// MasterEdition2 Account of the Collection Token
func (inst *UnverifyCollection) GetCollectionMasterEditionAccountAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetCollectionAuthorityRecordAccount sets the "collectionAuthorityRecord" account.
// Collection Authority Record PDA
func (inst *UnverifyCollection) SetCollectionAuthorityRecordAccount(collectionAuthorityRecord ag_solanago.PublicKey) *UnverifyCollection {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(collectionAuthorityRecord)
	return inst
}

// GetCollectionAuthorityRecordAccount gets the "collectionAuthorityRecord" account.
// Collection Authority Record PDA
func (inst *UnverifyCollection) GetCollectionAuthorityRecordAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

func (inst UnverifyCollection) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_UnverifyCollection,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst UnverifyCollection) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *UnverifyCollection) Validate() error {
	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Metadata is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.CollectionAuthority is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.CollectionMint is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.Collection is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.CollectionMasterEditionAccount is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.CollectionAuthorityRecord is not set")
		}
	}
	return nil
}

func (inst *UnverifyCollection) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("UnverifyCollection")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=0]").ParentFunc(func(paramsBranch ag_treeout.Branches) {})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=6]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("                 metadata", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("      collectionAuthority", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("           collectionMint", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("               collection", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("  collectionMasterEdition", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("collectionAuthorityRecord", inst.AccountMetaSlice.Get(5)))
					})
				})
		})
}

func (obj UnverifyCollection) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	return nil
}
func (obj *UnverifyCollection) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	return nil
}

// NewUnverifyCollectionInstruction declares a new UnverifyCollection instruction with the provided parameters and accounts.
func NewUnverifyCollectionInstruction(
	// Accounts:
	metadata ag_solanago.PublicKey,
	collectionAuthority ag_solanago.PublicKey,
	collectionMint ag_solanago.PublicKey,
	collection ag_solanago.PublicKey,
	collectionMasterEditionAccount ag_solanago.PublicKey,
	collectionAuthorityRecord ag_solanago.PublicKey) *UnverifyCollection {
	return NewUnverifyCollectionInstructionBuilder().
		SetMetadataAccount(metadata).
		SetCollectionAuthorityAccount(collectionAuthority).
		SetCollectionMintAccount(collectionMint).
		SetCollectionAccount(collection).
		SetCollectionMasterEditionAccountAccount(collectionMasterEditionAccount).
		SetCollectionAuthorityRecordAccount(collectionAuthorityRecord)
}
